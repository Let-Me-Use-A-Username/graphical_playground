==============================================
================== Final Roadmap =============

- Implement UI
    - Menu
    - Settings
        - Alter Effects/Music volume
        - Alter Movement/Drifting variables
    - Hot reloading?


- Implement Boss
    - use shape outlines to highlight them.

==============================================
================== Critical ==================



==============================================
================== Current ===================


==============================================
================== General todo ==============


==============================================
================== Gameplay ==================
- Implement a `hold velocity` mechanic, that slows down the player but after released, provides a burst of movement
    - Substitute with boost?


==============================================
================== Testing ===================
- Test in Player Drift:
    - When drifting, letting go off forwards / backwards,  turning, and 
        then applying Forwards/backwards input, increaes velocity
            - *UNSURE whether I want to keep this*
            - *Player Test ???*
            - Fixed by applying stronger deceleration in drifting when not throttling 

- Test in Player movement
    - Forwards and backwards directions maintain acceleration. Switching from W/D provides no deceleration
            - *UNSURE whether I want to keep this*
            - *Player Test ???*


- In release version, player movement feels different. Test it

- Grid map edge requests

==============================================
================== Gameplay Design and Ideas==


 
==============================================
================== Implementation ideas ======
- Implementing editor that hot reloads variables?

- Implement better UI
    - Implement fullscreen with  macroquad::prelude::Conf
        - Function macroquad::window::set_fullscreen ?
            - When settings are changed, restart game to run them (hot reload)
    - Implement Tinkering menu for different player-based aspects, variables, skins, sounds etc
    - Draw bullet ammunition UI
    - Draw Boost charges

- Performance enhancing ideas
    - Make an asynchronous and synchronous update loop


- Implement ErrorHandler
    -Change component function to return Results 
        -Log these results if error occurs

==============================================
================== Notes =====================
- If *memory leaks* occur in the future, there is a chance that one of the following will be at fault
    - Event queue is pushed faster than consumed
    - Grids operation queue doesn't drain properly
    - Emitters aren't dropped correctly from MetalArtist
    - Cyrcle Arc references inside game manager
    - MetalArtists Config is set to one shot but spawns every frame. (RectMove incident)

- Colliders:
    - Projectile colliders extend past the sprite, only forward.

==============================================
================== Study =====================
- Entity component system
- https://domwillia.ms/devlog1/
