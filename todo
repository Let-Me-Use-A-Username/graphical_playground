==============================================
================== Critical ==================
- MetalArtist:
    - Consider chaning Entities(Enemies, Proj, Player) to pass out their current_config instead
        of their state (when collecting emitter calls)
            - This allows more control of what emission to hand out.
            - Breaks the _simple_ logic of State-Emitter transmition
    - Monitor memory usage
        - Consider making changes to EmitterCache
    - Implement permanent emitters that keep particles?
        -PlayerDrifting


==============================================
================== General todo ==============
- Verify following work correctly.
    - Factories enemies are spawning in player vision again, make queue smaller.
        - Let resizing happen on queue_size increase, since more entities will be drawn, the viewport offset will be less
        - Assign position before sending enemy to handler?
            -  Give the handler a spawn queue and in update spawn around viewport
        - Change how factory queues enemies?

- Implement ErrorHandler
    -Change component function to return Results 
        -Log these results if error occurs

- Implement different kinds of enemies.

==============================================
================== Gameplay ==================
- Implement firing angle modifier based on mouse scroll. Instead of literally zooming.
- Implement boost
- Implement right click Shield
- Implement Tinkering menu for different player-based aspects, variables, skins, sounds etc

- Player Test
    -Test handbrake mechanic(Check forward and lateral friction)
        -Faster or slower? (if faster revert to old frictions, else increase them)
        -Turns too much or too little?
    -Test Players base turn rate (rotation when not drifting)
    -Not inputting movement losses velocity too fast
    -Bullet collider might not be overlapping sprite
-Test Results
    - Max speed too much
    - Max acceleration too much
    - Normal turn is too much
    - Firing too quickly


==============================================
================== Gameplay Design and Ideas==
- Draw non-complete shapes to imitate "zombie" like creatures. I.e. circle with transparent circle top left to imitate a 3/4 circle.


==============================================
================== Implementation ideas ======
- Implement build parameters
    - Debug mode
        - Enable/Disable tracy

- Implement better UI
    - Implement fullscreen with  macroquad::prelude::Conf
        - Function macroquad::window::set_fullscreen ?
            - When settings are changed, restart game to run them (hot reload)
    - Draw bullet ammunition UI


==============================================
================== Notes =====================
- If *memory leaks* occur in the future, there is a chance that one of the following will be at fault
    - Event queue is pushed faster than consumed
    - Grids operation queue doesn't drain properly
    - Emitters aren't dropped correctly from MetalArtist
    - Cyrcle Arc references inside game manager

==============================================
================== Study =====================
- Entity component system
- https://domwillia.ms/devlog1/
