==============================================
================== Critical ==================
- Implement collision detector
    - Emit EnemyDied signals for entity handler

- Refine communication between game components via Events
    - Factory: Receives events to Queue enemies or Retrieve enemies
    - Grid: Receives events to add, remove or update entities
    - Handler: Received events to Spawn or Kill enemies and bullets
    - Collision Detector: ???


==============================================
================== General todo ==============
- Implement better UI
    - Implement fullscreen with  macroquad::prelude::Conf
        - Function macroquad::window::set_fullscreen ?
            - When settings are changed, restart game to run them (hot reload)
    - Draw bullet ammunition UI
            

- Implement collider to each entity that can collide.
    - This way the entity manager can check whether the player rect collides with an entities (by id)
        -The colliders inside an enemy can be more than one, and could have properties that 
        make them adjustable, for example a triangle could have two circles or a rectangle
        thats longer on one side
    - Another way would be to have each element check themselves if collision occurs.

- Implement correct ids for entities. Currently enemies start from 1000 and bullets from 0.

==============================================
================== Gameplay ==================
- Implement drifting



==============================================
================== Gameplay Design and Ideas==
- Draw non-complete shapes to imitate "zombie" like creatures. I.e. circle with transparent circle top left to imitate a 3/4 circle.


==============================================
================== Implementation ideas ======
- Update enemies only when move or active or inside view(?)s

- Add threads to independent tasks (grid, factory, collition detection) be careful with shared data
- Use a thread per cell grid. Assign a structure per cell that gived information on either: Enemy pos and last pos, or cell status (populated, not)
    -When enemies exceed a certai number in a cell, divide the cell (and only this cell) with size 32 into 4 sub cells with size 8. One thread per subcell
    - Dynamic cell resize? 


==============================================
================== Study =====================
- Entity component system
- https://domwillia.ms/devlog1/
- https://mq.agical.se/ch3-smooth-movement.html
