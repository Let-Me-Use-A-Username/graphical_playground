==============================================
================== Critical ==================
- Resource optimazation
    - Memory
        - Implement enemy pooling
        - ECS?
    - CPU
        - Replace some async functions with synchronous ones
    - GPU
        - Separation of draw calls (circle, rect etc)
        - Batch drawing instead of separate draw calls


- Unregister listeners from the Dispatcher


- Implement enemy collision
    - Enemies now implement a state machine.
        -When the detector emits a CollidingEnemies event, the handler forces the enemies to move in a certain way
        to avoid overlapping
            - Force state change to move and change move_to target?

==============================================
================== General todo ==============
- Implement build parameters
    - Debug mode
        - Enable/Disable tracy

- Implement better UI
    - Implement fullscreen with  macroquad::prelude::Conf
        - Function macroquad::window::set_fullscreen ?
            - When settings are changed, restart game to run them (hot reload)
    - Draw bullet ammunition UI

- Implement correct ids for entities.

- Implement ErrorHandler 

- Implement different kind of enemies.

==============================================
================== Gameplay ==================
- Implement firing angle modifier based on mouse scroll. Instead of literally zooming.


==============================================
================== Gameplay Design and Ideas==
- Draw non-complete shapes to imitate "zombie" like creatures. I.e. circle with transparent circle top left to imitate a 3/4 circle.


==============================================
================== Implementation ideas ======


==============================================
================== Study =====================
- Entity component system
- https://domwillia.ms/devlog1/
