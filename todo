==============================================
================== Critical ==================
- GPU
    - Batch drawing and eparation of draw calls
        -Implement artist for Emitters (player)
            Idea: Keep a queue/Hashmap, with a z index and vec of draw calls
            for each z index, sort the queues into smaller ones and render

- CPU
    - Make `publish` and `update` synchronous
        
- Fix bullet pool regen
- Refine enemy collision

==============================================
================== General todo ==============
- Implement build parameters
    - Debug mode
        - Enable/Disable tracy

- Implement better UI
    - Implement fullscreen with  macroquad::prelude::Conf
        - Function macroquad::window::set_fullscreen ?
            - When settings are changed, restart game to run them (hot reload)
    - Draw bullet ammunition UI

- Implement correct ids for entities.
 
- Implement ErrorHandler 

- Implement different kind of enemies.

- Resource optimazation
    - Memory
        - Implement enemy pooling
        - ECS?

==============================================
================== Gameplay ==================
- Implement firing angle modifier based on mouse scroll. Instead of literally zooming.
- Refine handbrake


==============================================
================== Gameplay Design and Ideas==
- Draw non-complete shapes to imitate "zombie" like creatures. I.e. circle with transparent circle top left to imitate a 3/4 circle.


==============================================
================== Implementation ideas ======


==============================================
================== Study =====================
- Entity component system
- https://domwillia.ms/devlog1/
